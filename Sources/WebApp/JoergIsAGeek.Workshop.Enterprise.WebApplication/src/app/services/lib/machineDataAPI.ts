/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "ms-rest-js";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as Parameters from "./models/parameters";
import { MachineDataAPIContext } from "./machineDataAPIContext";

class MachineDataAPI extends MachineDataAPIContext {
  /**
   * Initializes a new instance of the MachineDataAPI class.
   * @param [options] The parameter options
   */
  constructor(options?: Models.MachineDataAPIOptions) {
    super(options);
  }

  /**
   * @param [options] The optional parameters
   * @returns Promise<Models.ApiMachineServiceGetResponse>
   */
  apiMachineServiceGet(options?: msRest.RequestOptionsBase): Promise<Models.ApiMachineServiceGetResponse>;
  /**
   * @param callback The callback
   */
  apiMachineServiceGet(callback: msRest.ServiceCallback<Models.MachineDto[]>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  apiMachineServiceGet(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MachineDto[]>): void;
  apiMachineServiceGet(options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<Models.MachineDto[]>): Promise<Models.ApiMachineServiceGetResponse> {
    return this.sendOperationRequest(
      {
        options
      },
      apiMachineServiceGetOperationSpec,
      callback) as Promise<Models.ApiMachineServiceGetResponse>;
  }

  /**
   * @param [options] The optional parameters
   * @returns Promise<Models.ApiMachineServicePutResponse>
   */
  apiMachineServicePut(options?: Models.MachineDataAPIApiMachineServicePutOptionalParams): Promise<Models.ApiMachineServicePutResponse>;
  /**
   * @param callback The callback
   */
  apiMachineServicePut(callback: msRest.ServiceCallback<boolean>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  apiMachineServicePut(options: Models.MachineDataAPIApiMachineServicePutOptionalParams, callback: msRest.ServiceCallback<boolean>): void;
  apiMachineServicePut(options?: Models.MachineDataAPIApiMachineServicePutOptionalParams, callback?: msRest.ServiceCallback<boolean>): Promise<Models.ApiMachineServicePutResponse> {
    return this.sendOperationRequest(
      {
        options
      },
      apiMachineServicePutOperationSpec,
      callback) as Promise<Models.ApiMachineServicePutResponse>;
  }

  /**
   * @param [options] The optional parameters
   * @returns Promise<Models.ApiMachineServicePostResponse>
   */
  apiMachineServicePost(options?: Models.MachineDataAPIApiMachineServicePostOptionalParams): Promise<Models.ApiMachineServicePostResponse>;
  /**
   * @param callback The callback
   */
  apiMachineServicePost(callback: msRest.ServiceCallback<boolean>): void;
  /**
   * @param options The optional parameters
   * @param callback The callback
   */
  apiMachineServicePost(options: Models.MachineDataAPIApiMachineServicePostOptionalParams, callback: msRest.ServiceCallback<boolean>): void;
  apiMachineServicePost(options?: Models.MachineDataAPIApiMachineServicePostOptionalParams, callback?: msRest.ServiceCallback<boolean>): Promise<Models.ApiMachineServicePostResponse> {
    return this.sendOperationRequest(
      {
        options
      },
      apiMachineServicePostOperationSpec,
      callback) as Promise<Models.ApiMachineServicePostResponse>;
  }

  /**
   * @param id
   * @param [options] The optional parameters
   * @returns Promise<Models.ApiMachineServiceByIdGetResponse>
   */
  apiMachineServiceByIdGet(id: number, options?: msRest.RequestOptionsBase): Promise<Models.ApiMachineServiceByIdGetResponse>;
  /**
   * @param id
   * @param callback The callback
   */
  apiMachineServiceByIdGet(id: number, callback: msRest.ServiceCallback<Models.MachineDto>): void;
  /**
   * @param id
   * @param options The optional parameters
   * @param callback The callback
   */
  apiMachineServiceByIdGet(id: number, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MachineDto>): void;
  apiMachineServiceByIdGet(id: number, options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<Models.MachineDto>): Promise<Models.ApiMachineServiceByIdGetResponse> {
    return this.sendOperationRequest(
      {
        id,
        options
      },
      apiMachineServiceByIdGetOperationSpec,
      callback) as Promise<Models.ApiMachineServiceByIdGetResponse>;
  }

  /**
   * @param id
   * @param [options] The optional parameters
   * @returns Promise<Models.ApiMachineServiceByIdDeleteResponse>
   */
  apiMachineServiceByIdDelete(id: number, options?: msRest.RequestOptionsBase): Promise<Models.ApiMachineServiceByIdDeleteResponse>;
  /**
   * @param id
   * @param callback The callback
   */
  apiMachineServiceByIdDelete(id: number, callback: msRest.ServiceCallback<boolean>): void;
  /**
   * @param id
   * @param options The optional parameters
   * @param callback The callback
   */
  apiMachineServiceByIdDelete(id: number, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<boolean>): void;
  apiMachineServiceByIdDelete(id: number, options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<boolean>): Promise<Models.ApiMachineServiceByIdDeleteResponse> {
    return this.sendOperationRequest(
      {
        id,
        options
      },
      apiMachineServiceByIdDeleteOperationSpec,
      callback) as Promise<Models.ApiMachineServiceByIdDeleteResponse>;
  }

  /**
   * @param value
   * @param [options] The optional parameters
   * @returns Promise<Models.ApiMachineServiceByValByValueGetResponse>
   */
  apiMachineServiceByValByValueGet(value: number, options?: msRest.RequestOptionsBase): Promise<Models.ApiMachineServiceByValByValueGetResponse>;
  /**
   * @param value
   * @param callback The callback
   */
  apiMachineServiceByValByValueGet(value: number, callback: msRest.ServiceCallback<Models.MachineDto[]>): void;
  /**
   * @param value
   * @param options The optional parameters
   * @param callback The callback
   */
  apiMachineServiceByValByValueGet(value: number, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.MachineDto[]>): void;
  apiMachineServiceByValByValueGet(value: number, options?: msRest.RequestOptionsBase, callback?: msRest.ServiceCallback<Models.MachineDto[]>): Promise<Models.ApiMachineServiceByValByValueGetResponse> {
    return this.sendOperationRequest(
      {
        value,
        options
      },
      apiMachineServiceByValByValueGetOperationSpec,
      callback) as Promise<Models.ApiMachineServiceByValByValueGetResponse>;
  }
}

// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const apiMachineServiceGetOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "api/MachineService",
  responses: {
    200: {
      bodyMapper: {
        serializedName: "parsedResponse",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MachineDto"
            }
          }
        }
      }
    },
    default: {}
  },
  serializer
};

const apiMachineServicePutOperationSpec: msRest.OperationSpec = {
  httpMethod: "PUT",
  path: "api/MachineService",
  requestBody: {
    parameterPath: [
      "options",
      "machine"
    ],
    mapper: Mappers.MachineDto
  },
  contentType: "application/json-patch+json; charset=utf-8",
  responses: {
    200: {
      bodyMapper: {
        serializedName: "parsedResponse",
        type: {
          name: "Boolean"
        }
      }
    },
    default: {}
  },
  serializer
};

const apiMachineServicePostOperationSpec: msRest.OperationSpec = {
  httpMethod: "POST",
  path: "api/MachineService",
  requestBody: {
    parameterPath: [
      "options",
      "machine"
    ],
    mapper: Mappers.MachineDto
  },
  contentType: "application/json-patch+json; charset=utf-8",
  responses: {
    200: {
      bodyMapper: {
        serializedName: "parsedResponse",
        type: {
          name: "Boolean"
        }
      }
    },
    default: {}
  },
  serializer
};

const apiMachineServiceByIdGetOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "api/MachineService/{id}",
  urlParameters: [
    Parameters.id
  ],
  responses: {
    200: {
      bodyMapper: Mappers.MachineDto
    },
    default: {}
  },
  serializer
};

const apiMachineServiceByIdDeleteOperationSpec: msRest.OperationSpec = {
  httpMethod: "DELETE",
  path: "api/MachineService/{id}",
  urlParameters: [
    Parameters.id
  ],
  responses: {
    200: {
      bodyMapper: {
        serializedName: "parsedResponse",
        type: {
          name: "Boolean"
        }
      }
    },
    default: {}
  },
  serializer
};

const apiMachineServiceByValByValueGetOperationSpec: msRest.OperationSpec = {
  httpMethod: "GET",
  path: "api/MachineService/byVal/{value}",
  urlParameters: [
    Parameters.value
  ],
  responses: {
    200: {
      bodyMapper: {
        serializedName: "parsedResponse",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "MachineDto"
            }
          }
        }
      }
    },
    default: {}
  },
  serializer
};

export {
  MachineDataAPI,
  MachineDataAPIContext,
  Models as MachineDataAPIModels,
  Mappers as MachineDataAPIMappers
};
