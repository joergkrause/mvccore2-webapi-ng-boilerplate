{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.module.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/index.ts","./src/app/components/info/site-info.component.ts","./src/app/components/info/site-info.component.html","./src/app/components/login/login-form.component.ts","./src/app/components/login/login-form.component.html","./src/app/components/logout/logout-form.component.ts","./src/app/components/logout/logout-form.component.html","./src/app/components/profile/profile-form.component.ts","./src/app/components/profile/profile-form.component.html","./src/app/components/registration/registration-form.component.ts","./src/app/components/registration/registration-form.component.html","./src/app/components/root/site-root.component.ts","./src/app/components/root/site-root.component.html","./src/app/configurations/routes.ts","./src/app/guards/auth.guard.ts","./src/app/guards/index.ts","./src/app/guards/storage.guard.ts","./src/app/modules/admin/admin.module.ts","./src/app/modules/admin/components/claims/admin-claims.component.ts","./src/app/modules/admin/components/claims/admin-claims.component.html","./src/app/modules/admin/components/index.ts","./src/app/modules/admin/components/roles/admin-roles.component.ts","./src/app/modules/admin/components/roles/admin-roles.component.html","./src/app/modules/admin/components/root/admin-root.component.ts","./src/app/modules/admin/components/root/admin-root.component.html","./src/app/modules/admin/components/users/admin-users.component.ts","./src/app/modules/admin/components/users/admin-users.component.html","./src/app/modules/admin/configurations/routes.ts","./src/app/services/account.service.ts","./src/app/services/auth.service.ts","./src/app/services/auth/tokeninterceptor.service.ts","./src/app/services/base.service.ts","./src/app/services/config.service.ts","./src/app/services/emitter.service.ts","./src/app/services/index.ts","./src/app/services/lib/frontendapi.services.ts","./src/app/services/machinedata.service.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["var map = {\n\t\"./modules/admin/admin.module\": \"./src/app/modules/admin/admin.module.ts\"\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { LocationStrategy, HashLocationStrategy, Location } from '@angular/common';\r\n\r\nimport { AuthGuard } from './guards/index';\r\n\r\nimport * as components from './components/index';\r\nimport * as services from './services/index';\r\n\r\nimport { routesConfig } from './configurations/routes';\r\nimport { TokenInterceptorService, API_BASE_URL } from './services/index';\r\n\r\n// The admin part is separated to it's own module\r\nimport { AdminModule } from './modules/admin/admin.module';\r\n\r\nexport function getBaseUrl(): string {\r\n  return services.ConfigService.apiURI;\r\n}\r\n\r\nconst material = [MatButtonModule, MatCheckboxModule, MatCardModule, MatTabsModule];\r\n\r\n@NgModule({\r\n  declarations: [ \r\n    components.SiteRootComponent, \r\n    components.SiteInfoComponent, \r\n    components.DashboardComponent,\r\n    components.LoginFormComponent, \r\n    components.LogoutFormComponent, \r\n    components.RegistrationFormComponent,\r\n    components.ProfileFormComponent\r\n  ],\r\n  imports: [\r\n    AdminModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot(routesConfig),\r\n    BrowserModule,    \r\n    HttpClientModule,\r\n    ...material\r\n  ],\r\n  providers: [\r\n    // router config\r\n    Location,\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\r\n    // handle Bearer token for all requests\r\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptorService, multi: true },\r\n    // Nswag's generated code can be configured here\r\n    { provide: API_BASE_URL, useFactory: getBaseUrl },\r\n    // regular demo data\r\n    services.MachineDataService,\r\n    // Account data, user details\r\n    services.AccountService,\r\n    // Login/Logout\r\n    services.AuthService,\r\n    // generic publish/subscribe\r\n    services.EmitterService,\r\n    // APIs to server\r\n    services.ApiAccounts, services.ApiAuth, services.ApiMachines,\r\n    // prevent routes for non-authenticated users\r\n    AuthGuard\r\n  ],\r\n  bootstrap: [ components.SiteRootComponent ]\r\n})\r\nexport class AppModule {\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { AccountService, MachineDataService, UserViewModel, MachineViewModel } from '../../services/index';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: 'dashboard.component.html',\r\n  styleUrls: ['dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  user: UserViewModel;\r\n  machines: MachineViewModel[];\r\n  error: any;\r\n\r\n  errors: string;\r\n  isRequesting: boolean;\r\n\r\n  constructor(private accountService: AccountService, private machineService: MachineDataService) {\r\n    this.machines = [];\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Get account information\r\n    this.accountService.getUserDetails()\r\n      .then(user => this.user = user)\r\n      .catch(error => this.error = error.message);\r\n    this.machineService.getMachines()\r\n      .then(machines => this.machines = machines)\r\n      .catch(error => this.error = error.message);\r\n  }\r\n\r\n}\r\n","<h2>Dashboard</h2>\r\n<mat-card *ngIf=\"error\">{{error}}</mat-card>\r\n<mat-card class=\"example-card\">\r\n  <mat-card-header>\r\n    <div mat-card-avatar class=\"example-header-image\"></div>\r\n    <mat-card-title>User Data</mat-card-title>\r\n    <mat-card-subtitle>Profile Info and Claims</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\">\r\n  <mat-card-content>\r\n    <dl>\r\n      <dt>User Name</dt>\r\n      <dd>{{ user.userName }}</dd>\r\n      <dt>E-Mail</dt>\r\n      <dd>{{ user.email }}</dd>\r\n    </dl>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <button mat-button>DETAILS</button>\r\n    <button mat-button>MORE...</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n<mat-card class=\"example-card\">\r\n  <mat-card-header>\r\n    <div mat-card-avatar class=\"example-header-image\"></div>\r\n    <mat-card-title>Machine Data</mat-card-title>\r\n    <mat-card-subtitle>Data from Demo Database</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\">\r\n  <mat-card-content>\r\n    <dl>\r\n      <dt>Number of Machines</dt>\r\n      <dd>{{ machines.length }}</dd>\r\n      <dt>List of Machines</dt>\r\n      <dd>\r\n        <ul>\r\n          <li *ngFor=\"let machine of machines\">\r\n            {{ machine.name }} ( {{ machine.location }} )\r\n          </li>\r\n        </ul>\r\n      </dd>\r\n    </dl>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <button mat-button>MANAGE</button>\r\n    <button mat-button>MORE...</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","// Globally used pages directly loaded by router\r\n// All working parts are in separate modules loaded on request\r\nexport * from './root/site-root.component';\r\nexport * from './info/site-info.component';\r\nexport * from './dashboard/dashboard.component';\r\nexport * from './login/login-form.component'; \r\nexport * from './logout/logout-form.component'; \r\nexport * from './registration/registration-form.component';\r\nexport * from './profile/profile-form.component';\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'site-info', \r\n  templateUrl: 'site-info.component.html'\r\n})\r\nexport class SiteInfoComponent {\r\n\r\n\r\n  constructor() {\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"alert alert-info\">\r\n  There are three pre-defined users:\r\n  <ul>\r\n    <li>Weird Guest (Login: weird@guest.com, Password: p@ssw0rd)</li>\r\n    <li>Doris Demo (Login: doris@demo.com, Password: p@ssw0rd)</li>\r\n    <li>Andy Admin (Login: andy@admin.com, Password: p@ssw0rd)</li>\r\n  </ul>\r\n  There are three roles defined, each role has one member:\r\n  <ul>\r\n    <li>Guest (Member: Weird Guest)</li>\r\n    <li>User (Member: Doris Demo)</li>\r\n    <li>Admin (Member: Andy Admin)</li>\r\n  </ul>\r\n  <p>There is one Policy as a User claim defined:</p> <pre>{{ '{' }}\"role\": \"api_access\" {{ '}' }}</pre>\r\n  <p>The members \"Doris Demo\" and \"Andy Admin\" have this claim.</p>\r\n  <p>Weird Guest has no claim and hence cannot access the backend API.</p>\r\n</div>\r\n<div class=\"alert alert-danger\">\r\n  <p>Login, Register and this Info page can be opened by all users. </p>\r\n  <p>A Guard is protecting the dashboard from user not properly logged on. If you click on \"Dashboard\" as an anonymous user \r\n  your're are going to be redirected to the login form.</p>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AuthService, ILogonViewModel } from '../../services/index';\r\n\r\n@Component({\r\n  selector: 'login-form',\r\n  templateUrl: 'login-form.component.html'\r\n})\r\nexport class LoginFormComponent implements OnInit, OnDestroy {\r\n\r\n  private subscription: Subscription;\r\n\r\n  errors: string;\r\n  isRequesting: boolean;\r\n  submitted: boolean = false;\r\n  credentials: ILogonViewModel = { userName: '', password: '' };\r\n\r\n  constructor(private authService: AuthService, private router: Router, private activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    // subscribe to router event\r\n    this.subscription = this.activatedRoute.queryParams.subscribe(\r\n      (param: any) => {\r\n        this.credentials.userName = param['userName'];\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // prevent memory leak by unsubscribing\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  login({ value, valid }: { value: ILogonViewModel, valid: boolean }) {\r\n    this.submitted = true;\r\n    this.isRequesting = true;\r\n    this.errors = '';\r\n    if (valid) {\r\n      this.authService.login(value)\r\n        .then(() => {\r\n          this.isRequesting = false;\r\n          return true;\r\n        })\r\n        .then(result => {\r\n          if (result) {\r\n            this.router.navigate(['/dashboard']);\r\n          }\r\n        },\r\n          error => this.errors = error);\r\n    }\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-md-6\">\r\n    <div class=\"card\">\r\n      <div class=\"card-block\">\r\n\r\n        <h4>Login</h4>\r\n\r\n        <form #f=\"ngForm\" novalidate (ngSubmit)=\"login(f)\">\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"userName\">Username (eMail)</label>\r\n            <input id=\"userName\" type=\"email\" required name=\"userName\" [ngModel] #email=\"ngModel\" tmFocus validateEmail class=\"form-control\"\r\n                   placeholder=\"Email\">\r\n\r\n            <small *ngIf=\"f.userName\" [hidden]=\"f.userName.valid || (f.userName.pristine && !submitted)\" class=\"text-danger\">\r\n              Please enter a valid email\r\n            </small>\r\n\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Password</label>\r\n            <input id=\"password\" type=\"password\" required name=\"password\" class=\"form-control\" placeholder=\"Password\" ngModel>\r\n\r\n            <small *ngIf=\"f.password\" [hidden]=\"f.password.valid || (f.password.pristine && !submitted)\" class=\"text-danger\">\r\n              Please enter a password\r\n            </small>\r\n\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"f.invalid || isRequesting\">Login</button>\r\n            <div *ngIf=\"isRequesting\">Logging in...</div>\r\n          </div>\r\n\r\n          <div *ngIf=\"errors\" class=\"alert alert-danger\" role=\"alert\">\r\n            <strong>An error occured:</strong> {{errors}}\r\n          </div>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, AfterViewInit, ChangeDetectorRef } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AuthService } from '../../services/index';\r\n\r\n@Component({\r\n  selector: 'logout-form',\r\n  templateUrl: 'logout-form.component.html'\r\n})\r\nexport class LogoutFormComponent implements OnInit, AfterViewInit {\r\n\r\n  errors: string;\r\n  loggedOut: boolean = false;\r\n\r\n  constructor(private authService: AuthService, private cd: ChangeDetectorRef) {\r\n    // function returns a delayed answer to simulate something serious\r\n    this.authService.logout().then(() => this.loggedOut = true);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this is an alternative way to get the information immediately, no weird delay \r\n    // this.authService.authNavStatus$.subscribe(data => this.loggedOut = data);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n\t<div class=\"col-md-6\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<div class=\"card-block\">\r\n\r\n\t\t\t\t<h4>Logout</h4>\r\n\r\n\t\t\t\t<div class=\"alert alert-warning\" *ngIf=\"!loggedOut\">You're about logging out.</div>\r\n\r\n\t\t\t\t<div class=\"alert alert-success\" *ngIf=\"loggedOut\">You're successfully being logged out.</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { AccountService, ClaimViewModel } from '../../services/index';\r\n\r\n@Component({\r\n  selector: 'profile-form',\r\n  templateUrl: './profile-form.component.html'\r\n})\r\nexport class ProfileFormComponent implements OnInit {\r\n\r\n  errors: string;\r\n  claims: ClaimViewModel[];\r\n\r\n  constructor(private accountService: AccountService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.accountService.getUserClaims().then(claims => this.claims = claims);\r\n  }\r\n\r\n  setProfile() {\r\n    // TODO: Write profile\r\n  }\r\n}\r\n","{{ claims | json }}","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthService, IRegistrationViewModel } from '../../services/index';\r\n\r\n@Component({\r\n  selector: 'registration-form',\r\n  templateUrl: './registration-form.component.html'\r\n})\r\nexport class RegistrationFormComponent implements OnInit {\r\n\r\n  errors: string;\r\n  isRequesting: boolean;\r\n  submitted: boolean = false;\r\n\r\n  constructor(private authService: AuthService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  registerUser({ value, valid }: { value: IRegistrationViewModel, valid: boolean }) {\r\n    this.submitted = true;\r\n    this.isRequesting = true;\r\n    this.errors = '';\r\n    if (valid) {\r\n      this.authService.register(value)\r\n        .then(() => this.isRequesting = false)\r\n        .then(\r\n          result => {\r\n            if (result) {\r\n              this.router.navigate(['/login'], { queryParams: { brandNew: true, email: value.email } });\r\n            }\r\n          },\r\n          errors => this.errors = errors.error ? Object.values(errors.error).join('') : JSON.stringify(errors));\r\n    }\r\n  }\r\n}\r\n","<div class=\"row\" id=\"reg-form\">\r\n  <div class=\"col-md-6\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header bg-white\">\r\n        <h4 class=\"card-title\">Create your account</h4>\r\n      </div>\r\n      <div class=\"card-block\">\r\n\r\n        <form #f=\"ngForm\" novalidate (ngSubmit)=\"registerUser(f)\">\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"first-name\">First name</label>\r\n            <input id=\"first-name\" type=\"text\" required name=\"firstName\" class=\"form-control\" placeholder=\"Your first name\" tmFocus ngModel>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"last-name\">Last name</label>\r\n            <input id=\"last-name\" type=\"text\" required name=\"lastName\" class=\"form-control\" placeholder=\"Your last name\" ngModel>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">Email</label>\r\n            <input id=\"email\" type=\"text\" required name=\"email\" validateEmail class=\"form-control\" placeholder=\"Email\" ngModel #email=\"ngModel\">\r\n            <small [hidden]=\"email.valid || (email.pristine && !submitted)\" class=\"text-danger\">Please enter a valid email</small>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Password</label>\r\n            <input id=\"password\" type=\"password\" required name=\"password\" class=\"form-control\" placeholder=\"Password\" ngModel>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"location\">Location</label>\r\n            <input id=\"location\" type=\"text\" required name=\"location\" class=\"form-control\" placeholder=\"Location\" ngModel>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"f.invalid || isRequesting\">Sign Up</button>\r\n            <div *ngIf=\"isRequesting\">Registering...</div>\r\n          </div>\r\n\r\n          <div *ngIf=\"errors\" class=\"alert alert-danger\" role=\"alert\">\r\n            <strong>Oops!</strong> {{errors}}\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, AfterViewInit, ChangeDetectorRef } from '@angular/core';\r\nimport { AuthService, EmitterService } from '../../services';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'site-root', \r\n  templateUrl: 'site-root.component.html',\r\n  styleUrls: ['site-root.component.scss']\r\n})\r\nexport class SiteRootComponent implements OnInit, AfterViewInit {\r\n\r\n  isLoggedIn: boolean = false;\r\n  userName: string;\r\n  navLinks: { path: string, label: string }[] = [];\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private emitterService: EmitterService,\r\n    private router: Router,\r\n    private cd: ChangeDetectorRef\r\n  ) {\r\n    this.emitterService.get('USER_LOGON').subscribe(data => this.userName = data.userName);\r\n    this.authService.authNavStatus$.subscribe(data => this.isLoggedIn = data);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn = this.authService.isLoggedIn;    \r\n    this.navLinks.push(\r\n      ...(this.router.config\r\n        .filter(r => r.data && r.data.mainmenu)\r\n        .map(r => {\r\n          return {\r\n            path: r.path,\r\n            label: r.data.title.toString()\r\n          }\r\n        }))\r\n    );\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n}\r\n","<h1>Professional App Foundation</h1>\r\n<nav mat-tab-nav-bar>\r\n  <a mat-tab-link\r\n     *ngIf=\"!isLoggedIn\"\r\n     routerLink=\"/login\"\r\n     routerLinkActive #rla=\"routerLinkActive\"\r\n     [active]=\"rla.isActive\">\r\n    Login\r\n  </a>\r\n  <a mat-tab-link\r\n     *ngIf=\"isLoggedIn\"\r\n     routerLink=\"/logout\"\r\n     routerLinkActive #rla=\"routerLinkActive\"\r\n     [active]=\"rla.isActive\">\r\n    Logout\r\n  </a>\r\n  <a mat-tab-link\r\n     *ngFor=\"let link of navLinks\"\r\n     [routerLink]=\"link.path\"\r\n     routerLinkActive #rla=\"routerLinkActive\"\r\n     [active]=\"rla.isActive\">\r\n    {{link.label}}\r\n  </a>\r\n</nav>\r\n<a routerLink='/admin'>Administration</a>\r\n<span class=\"pull-right\" *ngIf=\"isLoggedIn\">Welcome, {{ userName }}</span>\r\n<router-outlet></router-outlet>\r\n\r\n","import { Routes } from '@angular/router';\r\n\r\nimport * as components from '../components/index';\r\nimport { AuthGuard } from '../guards/index';\r\n\r\nexport const routesConfig: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'info',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'info',\r\n    component: components.SiteInfoComponent,\r\n    data: {\r\n      mainmenu: true,\r\n      title: 'Site Info'\r\n    }\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: components.RegistrationFormComponent,\r\n    data: {\r\n      mainmenu: true,\r\n      title: 'User Registration'\r\n    }\r\n  },\r\n  {\r\n    path: 'login/:email',\r\n    component: components.LoginFormComponent,\r\n    data: {\r\n      title: 'User Login'\r\n    }\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: components.LoginFormComponent,\r\n    data: {\r\n      title: 'User Login'\r\n    }\r\n  },\r\n  {\r\n    path: 'logout',\r\n    component: components.LogoutFormComponent,\r\n    data: {\r\n      title: 'User Logout'\r\n    }\r\n  },\r\n  {\r\n    path: 'dashboard',\r\n    component: components.DashboardComponent,\r\n    canActivate: [AuthGuard],\r\n    data: {\r\n      mainmenu: true,\r\n      title: 'Dashboard'\r\n    }\r\n  },\r\n  {\r\n    path: 'admin',\r\n    loadChildren: './modules/admin/admin.module#AdminModule',\r\n    data: {\r\n      mainmenu: true,\r\n      title: 'Administration'\r\n    }\r\n  }\r\n\r\n];\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/index';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService,private router: Router) {}\r\n\r\n  canActivate() {\r\n\r\n    if (!this.authService.isLoggedIn)\r\n    {\r\n       this.router.navigate(['/login']);\r\n       return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}","export * from './auth.guard';\r\nexport * from './storage.guard';\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class StorageGuard implements CanActivate {\r\n\r\n    constructor(private router: Router) { }\r\n\r\n    canActivate() {\r\n        if (localStorage.getItem('isLoggedin')) {\r\n            return true;\r\n        }\r\n\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { routesConfig } from './configurations/routes';\r\n\r\nimport * as components from './components/index';\r\n\r\n@NgModule({\r\n  declarations: [ \r\n    components.AdminRootComponent,\r\n    components.AdminUsersComponent,\r\n    components.AdminRolesComponent,\r\n    components.AdminClaimsComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,    \r\n    HttpClientModule,\r\n    RouterModule.forChild(routesConfig)\r\n  ],\r\n  exports: [\r\n    components.AdminRootComponent\r\n  ],\r\n  providers: []\r\n})\r\nexport class AdminModule {\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'admin-claims', \r\n  templateUrl: 'admin-claims.component.html',\r\n  styleUrls: ['admin-claims.component.css']\r\n})\r\nexport class AdminClaimsComponent implements OnInit {\r\n\r\n\r\n  constructor() {\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n        \r\n  }\r\n\r\n}\r\n","<h3>Claims Manager</h3>","// Globally used pages directly loaded by router\r\n// All working parts are in separate modules loaded on request\r\nexport * from './root/admin-root.component';\r\nexport * from './roles/admin-roles.component';\r\nexport * from './users/admin-users.component';\r\nexport * from './claims/admin-claims.component';\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'admin-roles', \r\n  templateUrl: 'admin-roles.component.html',\r\n  styleUrls: ['admin-roles.component.css']\r\n})\r\nexport class AdminRolesComponent implements OnInit {\r\n\r\n\r\n  constructor() {\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n        \r\n  }\r\n\r\n}\r\n","<h3>Roles Manager</h3>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'admin-root', \r\n  templateUrl: 'admin-root.component.html',\r\n  styleUrls: ['admin-root.component.css']\r\n})\r\nexport class AdminRootComponent implements OnInit {\r\n\r\n\r\n  constructor() {\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n        \r\n  }\r\n\r\n}\r\n","<h2>Administration Center</h2>\r\n<a [routerLink]=\"[{ outlets: { admin: [ 'users' ]}}]\">Users</a> |\r\n<a [routerLink]=\"[{ outlets: { admin: [ 'roles' ]}}]\">Roles</a> |\r\n<a [routerLink]=\"[{ outlets: { admin: [ 'claims' ]}}]\">Claims</a>\r\n<hr/>\r\n<div class=\"alert alert-info\">\r\n  Manage users, roles, and claims here. The backend has hardwired protection for two roles:\r\n  <ul>\r\n    <li>'admin': Administrative access to this module</li>\r\n    <li>'user': Access to all demo data</li>\r\n  </ul>\r\n  The backend also provides additional protection by using the claim 'role=api_access'. All users that need\r\n  backend API access need to carry this claim.\r\n</div>\r\n<router-outlet name=\"admin\"></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'admin-users', \r\n  templateUrl: 'admin-users.component.html',\r\n  styleUrls: ['admin-users.component.css']\r\n})\r\nexport class AdminUsersComponent implements OnInit {\r\n\r\n\r\n  constructor() {\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n        \r\n  }\r\n\r\n}\r\n","<h3>User Manager</h3>","import { Routes } from '@angular/router';\r\n\r\nimport * as components from '../components/index';\r\n\r\nexport const routesConfig: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'root',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'root',\r\n    component: components.AdminRootComponent,\r\n    children: [\r\n      { path: 'users', component: components.AdminUsersComponent, outlet: 'admin' },\r\n      { path: 'roles', component: components.AdminRolesComponent, outlet: 'admin' },\r\n      { path: 'claims', component: components.AdminClaimsComponent, outlet: 'admin' }\r\n    ],\r\n    data: {\r\n      title: 'Administration'\r\n    }\r\n  },\r\n  //{ path: 'root/users', component: components.AdminUsersComponent, outlet: 'admin' },\r\n  //{ path: 'admin/root/roles', component: components.AdminRolesComponent, outlet: 'admin' },\r\n  //{ path: 'claims', component: components.AdminClaimsComponent, outlet: 'admin' }\r\n\r\n];\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { BaseService } from './base.service';\r\n\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { ApiAccounts, UserViewModel, ClaimViewModel } from './lib/frontendapi.services';\r\n\r\n@Injectable()\r\nexport class AccountService extends BaseService {\r\n\r\n  constructor(private api: ApiAccounts) {\r\n    super();\r\n  }\r\n\r\n  getUserDetails(): Promise<UserViewModel> {\r\n    let id = localStorage.getItem('user_id');\r\n    return this.api.get(id).toPromise<UserViewModel>();\r\n  }\r\n\r\n  getUserClaims(): Promise<ClaimViewModel[]> {\r\n    let id = localStorage.getItem('user_id');\r\n    return this.api.getClaims(id).toPromise<ClaimViewModel[]>();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { BaseService } from \"./base.service\";\r\n\r\nimport { of, Observable, BehaviorSubject } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/mapTo';\r\nimport 'rxjs/add/operator/delay';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { EmitterService } from './emitter.service';\r\nimport { AccountService } from './account.service';\r\nimport { ApiAuth, ITokenResponseViewModel, IRegistrationViewModel, ILogonViewModel, RegistrationViewModel, LogonViewModel } from './lib/frontendapi.services';\r\n\r\n@Injectable()\r\nexport class AuthService extends BaseService {\r\n\r\n  baseUrl: string = '';\r\n\r\n  // Observable navItem source\r\n  private _authNavStatusSource = new BehaviorSubject<boolean>(false);\r\n  // Observable navItem stream\r\n  public authNavStatus$: Observable<boolean>;\r\n\r\n  private __loggedIn = false;\r\n\r\n  constructor(private emitterService: EmitterService, private api: ApiAuth, private accounts: AccountService) {\r\n    super();\r\n    this.authNavStatus$ = this._authNavStatusSource.asObservable();\r\n    this.authNavStatus$.subscribe(data => {\r\n      console.log('AuthNav Changed', data);\r\n    });\r\n    // check for an old token\r\n    let lastToken = localStorage.getItem('expires_in');\r\n    if (lastToken) {\r\n      let oldTime = localStorage.getItem('time');\r\n      let compareTime = new Date().getTime();\r\n      console.log('Last Expires In', lastToken, compareTime);\r\n      if (+oldTime + +lastToken < compareTime) {\r\n        this.logout();\r\n      } else {\r\n        this._authNavStatusSource.next(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  public register(model: IRegistrationViewModel): Promise<string> {\r\n    return this.api.post2(model as RegistrationViewModel).toPromise<string>();\r\n  }\r\n\r\n  public async login(model: ILogonViewModel): Promise<boolean> {\r\n    const res = await this.api.post(model as LogonViewModel).toPromise<ITokenResponseViewModel>();\r\n    if (!res) {\r\n      return Promise.reject();\r\n    }\r\n    if (!res.authToken) {\r\n      return Promise.resolve(false);\r\n    }\r\n    // receive the token and store for all upcoming requests\r\n    localStorage.setItem('auth_token', res.authToken);\r\n    localStorage.setItem('user_id', res.id);\r\n    localStorage.setItem('expires_in', res.expiresIn.toString());\r\n    let currentTime = new Date().getTime().toString();\r\n    localStorage.setItem('time', currentTime);\r\n    this.isLoggedIn = true;\r\n    // pull user data and provide through emitter\r\n    this.accounts.getUserDetails().then(user => {\r\n      this.emitterService.get('USER_LOGON').emit(user);\r\n    });\r\n    \r\n    return Promise.resolve(true);\r\n  }\r\n\r\n  public logout(): Promise<boolean> {\r\n    localStorage.removeItem('auth_token');\r\n    localStorage.removeItem('user_id');\r\n    localStorage.removeItem('expires_in');\r\n    this.isLoggedIn = false;\r\n    let o: Observable<boolean> = of(false);\r\n    return o.delay(2000).mapTo(false).toPromise();\r\n  }\r\n\r\n  public get isLoggedIn(): boolean {\r\n    return this.__loggedIn;\r\n  }\r\n  public set isLoggedIn(value: boolean) {\r\n    this.__loggedIn = value;\r\n    this._authNavStatusSource.next(value);\r\n  }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n/**\r\n * Adds the bearer token and the global JSON support, the latter header is required by ASP.NET Core WebAPI\r\n * */\r\n@Injectable()\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  constructor() { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    request = request.clone({\r\n      setHeaders: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${this.token}`\r\n      }\r\n    });\r\n    return next.handle(request);\r\n  }\r\n\r\n  private get token(): string {\r\n    return localStorage.getItem('auth_token');\r\n  }\r\n\r\n}","import { Observable } from 'rxjs/Observable';\r\n\r\nexport abstract class BaseService {\r\n\r\n  constructor() { }\r\n\r\n  protected handleError(error: any) {\r\n    var applicationError = error.headers.get('Application-Error');\r\n\r\n    // is applicationError \r\n    if (applicationError) {\r\n      return Observable.throw(applicationError);\r\n    }\r\n\r\n    // has modelState Error\r\n    var modelStateErrors: string = '';\r\n    if (error.error) {\r\n      var serverError = error.error;\r\n\r\n      if (!serverError.type) {\r\n        for (var key in serverError) {\r\n          if (serverError[key])\r\n            modelStateErrors += serverError[key] + '\\n';\r\n        }\r\n      }\r\n\r\n      modelStateErrors = modelStateErrors = '' ? null : modelStateErrors;\r\n      return Observable.throw(modelStateErrors || 'Server error');\r\n    }\r\n\r\n    // is regular message from infrastructure is somehow unexpected\r\n    return Observable.throw(error.message);\r\n  }\r\n}","/**\r\n * Store the API's base URL in case we need to change it from default origin.\r\n * */\r\nexport class ConfigService {\r\n\r\n  private static _apiURI: string = window.location.origin;\r\n\r\n  public static get apiURI() {\r\n    return ConfigService._apiURI;\r\n  }\r\n\r\n  public static set apiURI(value: string) {\r\n    ConfigService._apiURI = value;\r\n  }\r\n\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\n\r\n/**\r\n * Broadcast events through components using a publish/subscribe pattern.\r\n */\r\n@Injectable()\r\nexport class EmitterService {\r\n\r\n    private _emitters: { [ID: string]: EventEmitter<any> } = {};\r\n\r\n    public get(ID: string): EventEmitter<any> {\r\n        console.log(`Emitter for ${ID} called`);\r\n        if (!this._emitters[ID]) {\r\n          console.log(`Emitter for ${ID} added`);\r\n          this._emitters[ID] = new EventEmitter();\r\n        } else {\r\n          console.log(`Emitter for ${ID} exists`);\r\n        }\r\n        return this._emitters[ID];\r\n    }\r\n\r\n}","// services used in controllers\r\nexport * from './account.service';\r\nexport * from './machinedata.service';\r\nexport * from './emitter.service';\r\nexport * from './auth.service';\r\nexport * from './config.service';\r\n// supporting api\r\nexport * from './lib/frontendapi.services';\r\n// helper for authentication\r\nexport * from './auth/tokeninterceptor.service';\r\n","/* tslint:disable */\n/* eslint-disable */\n//----------------------\n// <auto-generated>\n//     Generated using the NSwag toolchain v13.1.6.0 (NJsonSchema v10.0.28.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)\n// </auto-generated>\n//----------------------\n// ReSharper disable InconsistentNaming\n\nimport { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\n\nexport const API_BASE_URL = new InjectionToken<string>('API_BASE_URL');\n\n@Injectable()\nexport class ApiAccounts {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"http://localhost:5000\";\n    }\n\n    get(id: string | null): Observable<UserViewModel> {\n        let url_ = this.baseUrl + \"/api/Accounts/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(<any>response_);\n                } catch (e) {\n                    return <Observable<UserViewModel>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<UserViewModel>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable<UserViewModel> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = UserViewModel.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result400: any = null;\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result400 = resultData400 !== undefined ? resultData400 : <any>null;\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result400);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<UserViewModel>(<any>null);\n    }\n\n    getClaims(id: string | null): Observable<ClaimViewModel[]> {\n        let url_ = this.baseUrl + \"/api/Accounts/{id}/claims\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetClaims(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetClaims(<any>response_);\n                } catch (e) {\n                    return <Observable<ClaimViewModel[]>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<ClaimViewModel[]>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetClaims(response: HttpResponseBase): Observable<ClaimViewModel[]> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(ClaimViewModel.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result400: any = null;\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result400 = resultData400 !== undefined ? resultData400 : <any>null;\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result400);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<ClaimViewModel[]>(<any>null);\n    }\n}\n\n@Injectable()\nexport class ApiAuth {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"http://localhost:5000\";\n    }\n\n    post(credentials: LogonViewModel): Observable<TokenResponseViewModel> {\n        let url_ = this.baseUrl + \"/api/Auth/login\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(credentials);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPost(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPost(<any>response_);\n                } catch (e) {\n                    return <Observable<TokenResponseViewModel>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<TokenResponseViewModel>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processPost(response: HttpResponseBase): Observable<TokenResponseViewModel> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = TokenResponseViewModel.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result400: any = null;\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result400 = ModelStateDictionary.fromJS(resultData400);\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result400);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<TokenResponseViewModel>(<any>null);\n    }\n\n    post2(model: RegistrationViewModel): Observable<string> {\n        let url_ = this.baseUrl + \"/api/Auth/register\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(model);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPost2(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPost2(<any>response_);\n                } catch (e) {\n                    return <Observable<string>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<string>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processPost2(response: HttpResponseBase): Observable<string> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 !== undefined ? resultData200 : <any>null;\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result400: any = null;\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result400 = ModelStateDictionary.fromJS(resultData400);\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result400);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<string>(<any>null);\n    }\n}\n\n@Injectable()\nexport class ApiMachines {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"http://localhost:5000\";\n    }\n\n    get(): Observable<MachineViewModel[]> {\n        let url_ = this.baseUrl + \"/api/Machines\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(<any>response_);\n                } catch (e) {\n                    return <Observable<MachineViewModel[]>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<MachineViewModel[]>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable<MachineViewModel[]> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let resultdefault: any = null;\n            let resultDatadefault = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultDatadefault)) {\n                resultdefault = [] as any;\n                for (let item of resultDatadefault)\n                    resultdefault!.push(MachineViewModel.fromJS(item));\n            }\n            return _observableOf(resultdefault);\n            }));\n        }\n    }\n\n    post(value: MachineViewModel): Observable<void> {\n        let url_ = this.baseUrl + \"/api/Machines\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(value);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPost(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPost(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processPost(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result400: any = null;\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result400 = ModelStateDictionary.fromJS(resultData400);\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result400);\n            }));\n        } else {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        }\n    }\n\n    get2(id: number): Observable<MachineViewModel> {\n        let url_ = this.baseUrl + \"/api/Machines/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet2(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet2(<any>response_);\n                } catch (e) {\n                    return <Observable<MachineViewModel>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<MachineViewModel>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGet2(response: HttpResponseBase): Observable<MachineViewModel> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let resultdefault: any = null;\n            let resultDatadefault = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            resultdefault = MachineViewModel.fromJS(resultDatadefault);\n            return _observableOf(resultdefault);\n            }));\n        }\n    }\n\n    put(id: number, value: MachineViewModel): Observable<void> {\n        let url_ = this.baseUrl + \"/api/Machines/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(value);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPut(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPut(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processPut(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result400: any = null;\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result400 = ModelStateDictionary.fromJS(resultData400);\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result400);\n            }));\n        } else {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        }\n    }\n\n    delete(id: number): Observable<void> {\n        let url_ = this.baseUrl + \"/api/Machines/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDelete(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers);\n            }));\n        } else {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        }\n    }\n}\n\n@Injectable()\nexport class ApiClaim {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"http://localhost:5000\";\n    }\n\n    get(id: string | null | undefined): Observable<ClaimViewModel[]> {\n        let url_ = this.baseUrl + \"/api/useradmin/Claim?\";\n        if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(<any>response_);\n                } catch (e) {\n                    return <Observable<ClaimViewModel[]>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<ClaimViewModel[]>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable<ClaimViewModel[]> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(ClaimViewModel.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<ClaimViewModel[]>(<any>null);\n    }\n\n    post(value: string): Observable<void> {\n        let url_ = this.baseUrl + \"/api/useradmin/Claim\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(value);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPost(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPost(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processPost(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(<any>null);\n    }\n\n    getUserForClaim(id: string, claimViewModel: ClaimViewModel): Observable<UserViewModel[]> {\n        let url_ = this.baseUrl + \"/api/useradmin/Claim/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(claimViewModel);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetUserForClaim(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetUserForClaim(<any>response_);\n                } catch (e) {\n                    return <Observable<UserViewModel[]>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<UserViewModel[]>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetUserForClaim(response: HttpResponseBase): Observable<UserViewModel[]> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(UserViewModel.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<UserViewModel[]>(<any>null);\n    }\n\n    delete(id: string | null, claimType: string | null | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/useradmin/Claim/{id}?\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        if (claimType !== undefined)\n            url_ += \"claimType=\" + encodeURIComponent(\"\" + claimType) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDelete(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(<any>null);\n    }\n\n    put(id: string | null, oldClaimType: string | null, newClaimType: string | null): Observable<void> {\n        let url_ = this.baseUrl + \"/api/useradmin/Claim/{id}/{oldClaimType}/{newClaimType}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        if (oldClaimType === undefined || oldClaimType === null)\n            throw new Error(\"The parameter 'oldClaimType' must be defined.\");\n        url_ = url_.replace(\"{oldClaimType}\", encodeURIComponent(\"\" + oldClaimType)); \n        if (newClaimType === undefined || newClaimType === null)\n            throw new Error(\"The parameter 'newClaimType' must be defined.\");\n        url_ = url_.replace(\"{newClaimType}\", encodeURIComponent(\"\" + newClaimType)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPut(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPut(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processPut(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(<any>null);\n    }\n}\n\n@Injectable()\nexport class ApiRole {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"http://localhost:5000\";\n    }\n\n    get(): Observable<RoleViewModel[]> {\n        let url_ = this.baseUrl + \"/api/useradmin/Role\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(<any>response_);\n                } catch (e) {\n                    return <Observable<RoleViewModel[]>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<RoleViewModel[]>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable<RoleViewModel[]> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(RoleViewModel.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<RoleViewModel[]>(<any>null);\n    }\n\n    post(role: RoleViewModel): Observable<void> {\n        let url_ = this.baseUrl + \"/api/useradmin/Role\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(role);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPost(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPost(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processPost(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(<any>null);\n    }\n\n    getbyId(id: string | null): Observable<RoleViewModel> {\n        let url_ = this.baseUrl + \"/api/useradmin/Role/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetbyId(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetbyId(<any>response_);\n                } catch (e) {\n                    return <Observable<RoleViewModel>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<RoleViewModel>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetbyId(response: HttpResponseBase): Observable<RoleViewModel> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = RoleViewModel.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<RoleViewModel>(<any>null);\n    }\n\n    put(id: number, role: RoleViewModel): Observable<void> {\n        let url_ = this.baseUrl + \"/api/useradmin/Role/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(role);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPut(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPut(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processPut(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(<any>null);\n    }\n\n    delete(id: string | null): Observable<void> {\n        let url_ = this.baseUrl + \"/api/useradmin/Role/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDelete(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(<any>null);\n    }\n}\n\n@Injectable()\nexport class ApiUser {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"http://localhost:5000\";\n    }\n\n    get(): Observable<UserViewModel[]> {\n        let url_ = this.baseUrl + \"/api/useradmin/User\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(<any>response_);\n                } catch (e) {\n                    return <Observable<UserViewModel[]>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<UserViewModel[]>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable<UserViewModel[]> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(UserViewModel.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<UserViewModel[]>(<any>null);\n    }\n\n    post(user: UserViewModel): Observable<void> {\n        let url_ = this.baseUrl + \"/api/useradmin/User\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(user);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPost(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPost(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processPost(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(<any>null);\n    }\n\n    getById(id: string | null): Observable<UserViewModel> {\n        let url_ = this.baseUrl + \"/api/useradmin/User/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetById(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetById(<any>response_);\n                } catch (e) {\n                    return <Observable<UserViewModel>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<UserViewModel>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetById(response: HttpResponseBase): Observable<UserViewModel> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = UserViewModel.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<UserViewModel>(<any>null);\n    }\n\n    put(id: string | null, user: UserViewModel): Observable<void> {\n        let url_ = this.baseUrl + \"/api/useradmin/User/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(user);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPut(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPut(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processPut(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(<any>null);\n    }\n\n    delete(id: string | null): Observable<void> {\n        let url_ = this.baseUrl + \"/api/useradmin/User/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDelete(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(<any>response_);\n                } catch (e) {\n                    return <Observable<void>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<void>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(<any>null);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(<any>null);\n    }\n}\n\nexport class UserViewModel implements IUserViewModel {\n    id!: string;\n    email!: string;\n    passwordHash?: string | undefined;\n    userName?: string | undefined;\n\n    constructor(data?: IUserViewModel) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.email = _data[\"email\"];\n            this.passwordHash = _data[\"passwordHash\"];\n            this.userName = _data[\"userName\"];\n        }\n    }\n\n    static fromJS(data: any): UserViewModel {\n        data = typeof data === 'object' ? data : {};\n        let result = new UserViewModel();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"email\"] = this.email;\n        data[\"passwordHash\"] = this.passwordHash;\n        data[\"userName\"] = this.userName;\n        return data; \n    }\n}\n\nexport interface IUserViewModel {\n    id: string;\n    email: string;\n    passwordHash?: string | undefined;\n    userName?: string | undefined;\n}\n\nexport class ClaimViewModel implements IClaimViewModel {\n    type!: string;\n    value?: string | undefined;\n\n    constructor(data?: IClaimViewModel) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.type = _data[\"type\"];\n            this.value = _data[\"value\"];\n        }\n    }\n\n    static fromJS(data: any): ClaimViewModel {\n        data = typeof data === 'object' ? data : {};\n        let result = new ClaimViewModel();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"type\"] = this.type;\n        data[\"value\"] = this.value;\n        return data; \n    }\n}\n\nexport interface IClaimViewModel {\n    type: string;\n    value?: string | undefined;\n}\n\nexport class TokenResponseViewModel implements ITokenResponseViewModel {\n    id?: string | undefined;\n    authToken?: string | undefined;\n    expiresIn?: number;\n\n    constructor(data?: ITokenResponseViewModel) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.authToken = _data[\"authToken\"];\n            this.expiresIn = _data[\"expiresIn\"];\n        }\n    }\n\n    static fromJS(data: any): TokenResponseViewModel {\n        data = typeof data === 'object' ? data : {};\n        let result = new TokenResponseViewModel();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"authToken\"] = this.authToken;\n        data[\"expiresIn\"] = this.expiresIn;\n        return data; \n    }\n}\n\nexport interface ITokenResponseViewModel {\n    id?: string | undefined;\n    authToken?: string | undefined;\n    expiresIn?: number;\n}\n\nexport class ModelStateDictionary implements IModelStateDictionary {\n    root?: ModelStateEntry | undefined;\n    maxAllowedErrors?: number;\n    hasReachedMaxErrors?: boolean;\n    errorCount?: number;\n    count?: number;\n    keys?: string[];\n    values?: ModelStateEntry[];\n    isValid?: boolean;\n    validationState?: ModelValidationState;\n    item?: ModelStateEntry | undefined;\n\n    constructor(data?: IModelStateDictionary) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.root = _data[\"Root\"] ? ModelStateEntry.fromJS(_data[\"Root\"]) : <any>undefined;\n            this.maxAllowedErrors = _data[\"MaxAllowedErrors\"];\n            this.hasReachedMaxErrors = _data[\"HasReachedMaxErrors\"];\n            this.errorCount = _data[\"ErrorCount\"];\n            this.count = _data[\"Count\"];\n            if (Array.isArray(_data[\"Keys\"])) {\n                this.keys = [] as any;\n                for (let item of _data[\"Keys\"])\n                    this.keys!.push(item);\n            }\n            if (Array.isArray(_data[\"Values\"])) {\n                this.values = [] as any;\n                for (let item of _data[\"Values\"])\n                    this.values!.push(ModelStateEntry.fromJS(item));\n            }\n            this.isValid = _data[\"IsValid\"];\n            this.validationState = _data[\"ValidationState\"];\n            this.item = _data[\"Item\"] ? ModelStateEntry.fromJS(_data[\"Item\"]) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): ModelStateDictionary {\n        data = typeof data === 'object' ? data : {};\n        let result = new ModelStateDictionary();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"Root\"] = this.root ? this.root.toJSON() : <any>undefined;\n        data[\"MaxAllowedErrors\"] = this.maxAllowedErrors;\n        data[\"HasReachedMaxErrors\"] = this.hasReachedMaxErrors;\n        data[\"ErrorCount\"] = this.errorCount;\n        data[\"Count\"] = this.count;\n        if (Array.isArray(this.keys)) {\n            data[\"Keys\"] = [];\n            for (let item of this.keys)\n                data[\"Keys\"].push(item);\n        }\n        if (Array.isArray(this.values)) {\n            data[\"Values\"] = [];\n            for (let item of this.values)\n                data[\"Values\"].push(item.toJSON());\n        }\n        data[\"IsValid\"] = this.isValid;\n        data[\"ValidationState\"] = this.validationState;\n        data[\"Item\"] = this.item ? this.item.toJSON() : <any>undefined;\n        return data; \n    }\n}\n\nexport interface IModelStateDictionary {\n    root?: ModelStateEntry | undefined;\n    maxAllowedErrors?: number;\n    hasReachedMaxErrors?: boolean;\n    errorCount?: number;\n    count?: number;\n    keys?: string[];\n    values?: ModelStateEntry[];\n    isValid?: boolean;\n    validationState?: ModelValidationState;\n    item?: ModelStateEntry | undefined;\n}\n\nexport abstract class ModelStateEntry implements IModelStateEntry {\n    rawValue?: any | undefined;\n    attemptedValue?: string | undefined;\n    errors?: ModelError[] | undefined;\n    validationState?: ModelValidationState;\n\n    constructor(data?: IModelStateEntry) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.rawValue = _data[\"rawValue\"];\n            this.attemptedValue = _data[\"attemptedValue\"];\n            if (Array.isArray(_data[\"errors\"])) {\n                this.errors = [] as any;\n                for (let item of _data[\"errors\"])\n                    this.errors!.push(ModelError.fromJS(item));\n            }\n            this.validationState = _data[\"validationState\"];\n        }\n    }\n\n    static fromJS(data: any): ModelStateEntry {\n        data = typeof data === 'object' ? data : {};\n        throw new Error(\"The abstract class 'ModelStateEntry' cannot be instantiated.\");\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"rawValue\"] = this.rawValue;\n        data[\"attemptedValue\"] = this.attemptedValue;\n        if (Array.isArray(this.errors)) {\n            data[\"errors\"] = [];\n            for (let item of this.errors)\n                data[\"errors\"].push(item.toJSON());\n        }\n        data[\"validationState\"] = this.validationState;\n        return data; \n    }\n}\n\nexport interface IModelStateEntry {\n    rawValue?: any | undefined;\n    attemptedValue?: string | undefined;\n    errors?: ModelError[] | undefined;\n    validationState?: ModelValidationState;\n}\n\nexport class ModelError implements IModelError {\n    exception?: Exception | undefined;\n    errorMessage?: string | undefined;\n\n    constructor(data?: IModelError) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.exception = _data[\"exception\"] ? Exception.fromJS(_data[\"exception\"]) : <any>undefined;\n            this.errorMessage = _data[\"errorMessage\"];\n        }\n    }\n\n    static fromJS(data: any): ModelError {\n        data = typeof data === 'object' ? data : {};\n        let result = new ModelError();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"exception\"] = this.exception ? this.exception.toJSON() : <any>undefined;\n        data[\"errorMessage\"] = this.errorMessage;\n        return data; \n    }\n}\n\nexport interface IModelError {\n    exception?: Exception | undefined;\n    errorMessage?: string | undefined;\n}\n\nexport class Exception implements IException {\n    stackTrace?: string | undefined;\n    message?: string;\n    innerException?: Exception | undefined;\n    source?: string | undefined;\n\n    constructor(data?: IException) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.stackTrace = _data[\"StackTrace\"];\n            this.message = _data[\"Message\"];\n            this.innerException = _data[\"InnerException\"] ? Exception.fromJS(_data[\"InnerException\"]) : <any>undefined;\n            this.source = _data[\"Source\"];\n        }\n    }\n\n    static fromJS(data: any): Exception {\n        data = typeof data === 'object' ? data : {};\n        let result = new Exception();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"StackTrace\"] = this.stackTrace;\n        data[\"Message\"] = this.message;\n        data[\"InnerException\"] = this.innerException ? this.innerException.toJSON() : <any>undefined;\n        data[\"Source\"] = this.source;\n        return data; \n    }\n}\n\nexport interface IException {\n    stackTrace?: string | undefined;\n    message?: string;\n    innerException?: Exception | undefined;\n    source?: string | undefined;\n}\n\nexport enum ModelValidationState {\n    Unvalidated = 0,\n    Invalid = 1,\n    Valid = 2,\n    Skipped = 3,\n}\n\nexport class LogonViewModel implements ILogonViewModel {\n    userName!: string;\n    password!: string;\n\n    constructor(data?: ILogonViewModel) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.userName = _data[\"userName\"];\n            this.password = _data[\"password\"];\n        }\n    }\n\n    static fromJS(data: any): LogonViewModel {\n        data = typeof data === 'object' ? data : {};\n        let result = new LogonViewModel();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"userName\"] = this.userName;\n        data[\"password\"] = this.password;\n        return data; \n    }\n}\n\nexport interface ILogonViewModel {\n    userName: string;\n    password: string;\n}\n\nexport class RegistrationViewModel implements IRegistrationViewModel {\n    email!: string;\n    password!: string;\n    firstName!: string;\n    lastName!: string;\n    location?: string | undefined;\n\n    constructor(data?: IRegistrationViewModel) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.email = _data[\"email\"];\n            this.password = _data[\"password\"];\n            this.firstName = _data[\"firstName\"];\n            this.lastName = _data[\"lastName\"];\n            this.location = _data[\"location\"];\n        }\n    }\n\n    static fromJS(data: any): RegistrationViewModel {\n        data = typeof data === 'object' ? data : {};\n        let result = new RegistrationViewModel();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"email\"] = this.email;\n        data[\"password\"] = this.password;\n        data[\"firstName\"] = this.firstName;\n        data[\"lastName\"] = this.lastName;\n        data[\"location\"] = this.location;\n        return data; \n    }\n}\n\nexport interface IRegistrationViewModel {\n    email: string;\n    password: string;\n    firstName: string;\n    lastName: string;\n    location?: string | undefined;\n}\n\nexport class BaseViewModel implements IBaseViewModel {\n    id?: number;\n\n    constructor(data?: IBaseViewModel) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): BaseViewModel {\n        data = typeof data === 'object' ? data : {};\n        let result = new BaseViewModel();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface IBaseViewModel {\n    id?: number;\n}\n\nexport class MachineViewModel extends BaseViewModel implements IMachineViewModel {\n    name!: string;\n    location?: string | undefined;\n    hasDevices?: boolean;\n\n    constructor(data?: IMachineViewModel) {\n        super(data);\n    }\n\n    init(_data?: any) {\n        super.init(_data);\n        if (_data) {\n            this.name = _data[\"name\"];\n            this.location = _data[\"location\"];\n            this.hasDevices = _data[\"hasDevices\"];\n        }\n    }\n\n    static fromJS(data: any): MachineViewModel {\n        data = typeof data === 'object' ? data : {};\n        let result = new MachineViewModel();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"name\"] = this.name;\n        data[\"location\"] = this.location;\n        data[\"hasDevices\"] = this.hasDevices;\n        super.toJSON(data);\n        return data; \n    }\n}\n\nexport interface IMachineViewModel extends IBaseViewModel {\n    name: string;\n    location?: string | undefined;\n    hasDevices?: boolean;\n}\n\nexport class RoleViewModel implements IRoleViewModel {\n    id!: string;\n    name!: string;\n\n    constructor(data?: IRoleViewModel) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.name = _data[\"name\"];\n        }\n    }\n\n    static fromJS(data: any): RoleViewModel {\n        data = typeof data === 'object' ? data : {};\n        let result = new RoleViewModel();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"name\"] = this.name;\n        return data; \n    }\n}\n\nexport interface IRoleViewModel {\n    id: string;\n    name: string;\n}\n\nexport class ApiException extends Error {\n    message: string;\n    status: number; \n    response: string; \n    headers: { [key: string]: any; };\n    result: any; \n\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\n        super();\n\n        this.message = message;\n        this.status = status;\n        this.response = response;\n        this.headers = headers;\n        this.result = result;\n    }\n\n    protected isApiException = true;\n\n    static isApiException(obj: any): obj is ApiException {\n        return obj.isApiException === true;\n    }\n}\n\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable<any> {\n    if (result !== null && result !== undefined)\n        return _observableThrow(result);\n    else\n        return _observableThrow(new ApiException(message, status, response, headers, null));\n}\n\nfunction blobToText(blob: any): Observable<string> {\n    return new Observable<string>((observer: any) => {\n        if (!blob) {\n            observer.next(\"\");\n            observer.complete();\n        } else {\n            let reader = new FileReader(); \n            reader.onload = event => { \n                observer.next((<any>event.target).result);\n                observer.complete();\n            };\n            reader.readAsText(blob); \n        }\n    });\n}","import { Injectable } from '@angular/core';\r\nimport { ApiMachines, MachineViewModel } from './lib/frontendapi.services';\r\n\r\ntype chartPoint = Array<{ x: number, y: number, v: number }>;\r\n\r\n@Injectable()\r\nexport class MachineDataService {\r\n\r\n  constructor(private api: ApiMachines) {\r\n  }\r\n\r\n  public async getChartData(): Promise<chartPoint> {\r\n    throw new Error('Not implemented');\r\n  }\r\n\r\n  public getMachines(): Promise<MachineViewModel[]> {\r\n    return this.api.get().toPromise();\r\n  }\r\n\r\n}","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule).catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}